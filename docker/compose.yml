services:
  node:
    image: ghcr.io/tplr-ai/templar:latest
    container_name: templar-${NODE_TYPE:-miner}-${WALLET_HOTKEY}
    restart: unless-stopped
    volumes:
      - ~/.bittensor/wallets:/root/.bittensor/wallets
      - ./logs:/app/logs
      - ./.local_state:/app/.local_state
    environment:
      - NODE_TYPE=${NODE_TYPE:-miner}
      - WALLET_NAME=${WALLET_NAME}
      - WALLET_HOTKEY=${WALLET_HOTKEY}
      - CUDA_DEVICE=${CUDA_DEVICE:-cuda:0}
      - NETWORK=${NETWORK:-finney}
      - DEBUG=${DEBUG:-false}
      - NETUID=${NETUID:-268}
      - WANDB_API_KEY=${WANDB_API_KEY}
      - HOST_CUDA_VERSION=12.6
      - R2_GRADIENTS_ACCOUNT_ID=${R2_GRADIENTS_ACCOUNT_ID}
      - R2_GRADIENTS_BUCKET_NAME=${R2_GRADIENTS_BUCKET_NAME}
      - R2_GRADIENTS_READ_ACCESS_KEY_ID=${R2_GRADIENTS_READ_ACCESS_KEY_ID}
      - R2_GRADIENTS_READ_SECRET_ACCESS_KEY=${R2_GRADIENTS_READ_SECRET_ACCESS_KEY}
      - R2_GRADIENTS_WRITE_ACCESS_KEY_ID=${R2_GRADIENTS_WRITE_ACCESS_KEY_ID}
      - R2_GRADIENTS_WRITE_SECRET_ACCESS_KEY=${R2_GRADIENTS_WRITE_SECRET_ACCESS_KEY}
      - R2_DATASET_ACCOUNT_ID=${R2_DATASET_ACCOUNT_ID}
      - R2_DATASET_BUCKET_NAME=${R2_DATASET_BUCKET_NAME}
      - R2_DATASET_READ_ACCESS_KEY_ID=${R2_DATASET_READ_ACCESS_KEY_ID}
      - R2_DATASET_READ_SECRET_ACCESS_KEY=${R2_DATASET_READ_SECRET_ACCESS_KEY}
      - R2_DATASET_WRITE_ACCESS_KEY_ID=${R2_DATASET_WRITE_ACCESS_KEY_ID}
      - R2_DATASET_WRITE_SECRET_ACCESS_KEY=${R2_DATASET_WRITE_SECRET_ACCESS_KEY}
      - R2_DATASET_BUCKET_LIST=${R2_DATASET_BUCKET_LIST}
      - R2_AGGREGATOR_ACCOUNT_ID=${R2_AGGREGATOR_ACCOUNT_ID}
      - R2_AGGREGATOR_BUCKET_NAME=${R2_AGGREGATOR_BUCKET_NAME}
      - R2_AGGREGATOR_READ_ACCESS_KEY_ID=${R2_AGGREGATOR_READ_ACCESS_KEY_ID}
      - R2_AGGREGATOR_READ_SECRET_ACCESS_KEY=${R2_AGGREGATOR_READ_SECRET_ACCESS_KEY}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: [ '0', '1', '2' ]
              capabilities: [ gpu ]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup --label-enable
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - REPO_USER=${GITHUB_USER}
      - REPO_PASSWORD=${GITHUB_TOKEN}
