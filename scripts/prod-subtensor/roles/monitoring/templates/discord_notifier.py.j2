#!/usr/bin/env python3

import sys
import json
import argparse
from discord_webhook import DiscordWebhook, DiscordEmbed

def send_alert(webhook_url: str, severity: str, title: str, message: str, fields: dict = None):
    colors = {
        'critical': 0xFF0000,
        'warning': 0xFFA500,
        'info': 0x0099FF,
        'success': 0x00FF00
    }
    
    emojis = {
        'critical': 'üö®',
        'warning': '‚ö†Ô∏è',
        'info': '‚ÑπÔ∏è',
        'success': '‚úÖ'
    }
    
    try:
        webhook = DiscordWebhook(url=webhook_url, username="{{ discord_username }}")
        
        embed = DiscordEmbed(
            title=f"{emojis.get(severity, '')} {title}",
            description=message,
            color=colors.get(severity, 0x808080)
        )
        
        if fields:
            for key, value in fields.items():
                embed.add_embed_field(name=key, value=str(value), inline=True)
        
        embed.set_timestamp()
        webhook.add_embed(embed)
        
        response = webhook.execute()
        
        if response.status_code == 200:
            print(f"‚úÖ Discord alert sent successfully")
            return True
        else:
            print(f"‚ùå Failed to send Discord alert: HTTP {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Discord webhook error: {e}")
        return False

def main():
    parser = argparse.ArgumentParser(description='Send Discord notifications')
    parser.add_argument('--webhook-url', required=True, help='Discord webhook URL')
    parser.add_argument('--severity', choices=['critical', 'warning', 'info', 'success'], 
                       default='info', help='Alert severity')
    parser.add_argument('--title', required=True, help='Alert title')
    parser.add_argument('--message', required=True, help='Alert message')
    parser.add_argument('--fields', help='JSON string of additional fields')
    
    args = parser.parse_args()
    
    fields = None
    if args.fields:
        try:
            fields = json.loads(args.fields)
        except json.JSONDecodeError:
            print(f"‚ùå Invalid JSON in --fields: {args.fields}")
            sys.exit(1)
    
    success = send_alert(args.webhook_url, args.severity, args.title, args.message, fields)
    sys.exit(0 if success else 1)

if __name__ == '__main__':
    main()